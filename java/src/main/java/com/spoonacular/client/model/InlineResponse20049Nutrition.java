/*
 * spoonacular API
 * The spoonacular Nutrition, Recipe, and Food API allows you to access over 380,000 recipes, thousands of ingredients, 800,000 food products, and 100,000 menu items. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: mail@spoonacular.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.spoonacular.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spoonacular.client.model.InlineResponse20049NutritionCalories;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InlineResponse20049Nutrition
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-03T15:10:59.332+02:00[Europe/Berlin]")
public class InlineResponse20049Nutrition {
  public static final String SERIALIZED_NAME_RECIPES_USED = "recipesUsed";
  @SerializedName(SERIALIZED_NAME_RECIPES_USED)
  private Integer recipesUsed;

  public static final String SERIALIZED_NAME_CALORIES = "calories";
  @SerializedName(SERIALIZED_NAME_CALORIES)
  private InlineResponse20049NutritionCalories calories = null;

  public static final String SERIALIZED_NAME_FAT = "fat";
  @SerializedName(SERIALIZED_NAME_FAT)
  private InlineResponse20049NutritionCalories fat = null;

  public static final String SERIALIZED_NAME_PROTEIN = "protein";
  @SerializedName(SERIALIZED_NAME_PROTEIN)
  private InlineResponse20049NutritionCalories protein = null;

  public static final String SERIALIZED_NAME_CARBS = "carbs";
  @SerializedName(SERIALIZED_NAME_CARBS)
  private InlineResponse20049NutritionCalories carbs = null;

  public InlineResponse20049Nutrition recipesUsed(Integer recipesUsed) {
    this.recipesUsed = recipesUsed;
    return this;
  }

   /**
   * Get recipesUsed
   * @return recipesUsed
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getRecipesUsed() {
    return recipesUsed;
  }

  public void setRecipesUsed(Integer recipesUsed) {
    this.recipesUsed = recipesUsed;
  }

  public InlineResponse20049Nutrition calories(InlineResponse20049NutritionCalories calories) {
    this.calories = calories;
    return this;
  }

   /**
   * Get calories
   * @return calories
  **/
  @ApiModelProperty(required = true, value = "")
  public InlineResponse20049NutritionCalories getCalories() {
    return calories;
  }

  public void setCalories(InlineResponse20049NutritionCalories calories) {
    this.calories = calories;
  }

  public InlineResponse20049Nutrition fat(InlineResponse20049NutritionCalories fat) {
    this.fat = fat;
    return this;
  }

   /**
   * Get fat
   * @return fat
  **/
  @ApiModelProperty(required = true, value = "")
  public InlineResponse20049NutritionCalories getFat() {
    return fat;
  }

  public void setFat(InlineResponse20049NutritionCalories fat) {
    this.fat = fat;
  }

  public InlineResponse20049Nutrition protein(InlineResponse20049NutritionCalories protein) {
    this.protein = protein;
    return this;
  }

   /**
   * Get protein
   * @return protein
  **/
  @ApiModelProperty(required = true, value = "")
  public InlineResponse20049NutritionCalories getProtein() {
    return protein;
  }

  public void setProtein(InlineResponse20049NutritionCalories protein) {
    this.protein = protein;
  }

  public InlineResponse20049Nutrition carbs(InlineResponse20049NutritionCalories carbs) {
    this.carbs = carbs;
    return this;
  }

   /**
   * Get carbs
   * @return carbs
  **/
  @ApiModelProperty(required = true, value = "")
  public InlineResponse20049NutritionCalories getCarbs() {
    return carbs;
  }

  public void setCarbs(InlineResponse20049NutritionCalories carbs) {
    this.carbs = carbs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20049Nutrition inlineResponse20049Nutrition = (InlineResponse20049Nutrition) o;
    return Objects.equals(this.recipesUsed, inlineResponse20049Nutrition.recipesUsed) &&
        Objects.equals(this.calories, inlineResponse20049Nutrition.calories) &&
        Objects.equals(this.fat, inlineResponse20049Nutrition.fat) &&
        Objects.equals(this.protein, inlineResponse20049Nutrition.protein) &&
        Objects.equals(this.carbs, inlineResponse20049Nutrition.carbs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recipesUsed, calories, fat, protein, carbs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20049Nutrition {\n");
    sb.append("    recipesUsed: ").append(toIndentedString(recipesUsed)).append("\n");
    sb.append("    calories: ").append(toIndentedString(calories)).append("\n");
    sb.append("    fat: ").append(toIndentedString(fat)).append("\n");
    sb.append("    protein: ").append(toIndentedString(protein)).append("\n");
    sb.append("    carbs: ").append(toIndentedString(carbs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

