/*
 * spoonacular API
 * The spoonacular Nutrition, Recipe, and Food API allows you to access over 380,000 recipes, thousands of ingredients, 800,000 food products, and 100,000 menu items. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: mail@spoonacular.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.spoonacular.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * InlineResponse20037Nutrients
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-03T15:10:59.332+02:00[Europe/Berlin]")
public class InlineResponse20037Nutrients {
  public static final String SERIALIZED_NAME_CALORIES = "calories";
  @SerializedName(SERIALIZED_NAME_CALORIES)
  private BigDecimal calories;

  public static final String SERIALIZED_NAME_CARBOHYDRATES = "carbohydrates";
  @SerializedName(SERIALIZED_NAME_CARBOHYDRATES)
  private BigDecimal carbohydrates;

  public static final String SERIALIZED_NAME_FAT = "fat";
  @SerializedName(SERIALIZED_NAME_FAT)
  private BigDecimal fat;

  public static final String SERIALIZED_NAME_PROTEIN = "protein";
  @SerializedName(SERIALIZED_NAME_PROTEIN)
  private BigDecimal protein;

  public InlineResponse20037Nutrients calories(BigDecimal calories) {
    this.calories = calories;
    return this;
  }

   /**
   * Get calories
   * @return calories
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getCalories() {
    return calories;
  }

  public void setCalories(BigDecimal calories) {
    this.calories = calories;
  }

  public InlineResponse20037Nutrients carbohydrates(BigDecimal carbohydrates) {
    this.carbohydrates = carbohydrates;
    return this;
  }

   /**
   * Get carbohydrates
   * @return carbohydrates
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getCarbohydrates() {
    return carbohydrates;
  }

  public void setCarbohydrates(BigDecimal carbohydrates) {
    this.carbohydrates = carbohydrates;
  }

  public InlineResponse20037Nutrients fat(BigDecimal fat) {
    this.fat = fat;
    return this;
  }

   /**
   * Get fat
   * @return fat
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getFat() {
    return fat;
  }

  public void setFat(BigDecimal fat) {
    this.fat = fat;
  }

  public InlineResponse20037Nutrients protein(BigDecimal protein) {
    this.protein = protein;
    return this;
  }

   /**
   * Get protein
   * @return protein
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getProtein() {
    return protein;
  }

  public void setProtein(BigDecimal protein) {
    this.protein = protein;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20037Nutrients inlineResponse20037Nutrients = (InlineResponse20037Nutrients) o;
    return Objects.equals(this.calories, inlineResponse20037Nutrients.calories) &&
        Objects.equals(this.carbohydrates, inlineResponse20037Nutrients.carbohydrates) &&
        Objects.equals(this.fat, inlineResponse20037Nutrients.fat) &&
        Objects.equals(this.protein, inlineResponse20037Nutrients.protein);
  }

  @Override
  public int hashCode() {
    return Objects.hash(calories, carbohydrates, fat, protein);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20037Nutrients {\n");
    sb.append("    calories: ").append(toIndentedString(calories)).append("\n");
    sb.append("    carbohydrates: ").append(toIndentedString(carbohydrates)).append("\n");
    sb.append("    fat: ").append(toIndentedString(fat)).append("\n");
    sb.append("    protein: ").append(toIndentedString(protein)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

