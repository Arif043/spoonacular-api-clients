/*
 * spoonacular API
 * The spoonacular Nutrition, Recipe, and Food API allows you to access over 380,000 recipes, thousands of ingredients, 800,000 food products, and 100,000 menu items. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: mail@spoonacular.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.spoonacular.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spoonacular.client.model.InlineResponse2003ExtendedIngredients;
import com.spoonacular.client.model.InlineResponse2003WinePairing;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * InlineResponse2003
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-03T15:10:59.332+02:00[Europe/Berlin]")
public class InlineResponse2003 {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private String image;

  public static final String SERIALIZED_NAME_IMAGE_TYPE = "imageType";
  @SerializedName(SERIALIZED_NAME_IMAGE_TYPE)
  private String imageType;

  public static final String SERIALIZED_NAME_SERVINGS = "servings";
  @SerializedName(SERIALIZED_NAME_SERVINGS)
  private BigDecimal servings;

  public static final String SERIALIZED_NAME_READY_IN_MINUTES = "readyInMinutes";
  @SerializedName(SERIALIZED_NAME_READY_IN_MINUTES)
  private Integer readyInMinutes;

  public static final String SERIALIZED_NAME_LICENSE = "license";
  @SerializedName(SERIALIZED_NAME_LICENSE)
  private String license;

  public static final String SERIALIZED_NAME_SOURCE_NAME = "sourceName";
  @SerializedName(SERIALIZED_NAME_SOURCE_NAME)
  private String sourceName;

  public static final String SERIALIZED_NAME_SOURCE_URL = "sourceUrl";
  @SerializedName(SERIALIZED_NAME_SOURCE_URL)
  private String sourceUrl;

  public static final String SERIALIZED_NAME_SPOONACULAR_SOURCE_URL = "spoonacularSourceUrl";
  @SerializedName(SERIALIZED_NAME_SPOONACULAR_SOURCE_URL)
  private String spoonacularSourceUrl;

  public static final String SERIALIZED_NAME_AGGREGATE_LIKES = "aggregateLikes";
  @SerializedName(SERIALIZED_NAME_AGGREGATE_LIKES)
  private Integer aggregateLikes;

  public static final String SERIALIZED_NAME_HEALTH_SCORE = "healthScore";
  @SerializedName(SERIALIZED_NAME_HEALTH_SCORE)
  private BigDecimal healthScore;

  public static final String SERIALIZED_NAME_SPOONACULAR_SCORE = "spoonacularScore";
  @SerializedName(SERIALIZED_NAME_SPOONACULAR_SCORE)
  private BigDecimal spoonacularScore;

  public static final String SERIALIZED_NAME_PRICE_PER_SERVING = "pricePerServing";
  @SerializedName(SERIALIZED_NAME_PRICE_PER_SERVING)
  private BigDecimal pricePerServing;

  public static final String SERIALIZED_NAME_ANALYZED_INSTRUCTIONS = "analyzedInstructions";
  @SerializedName(SERIALIZED_NAME_ANALYZED_INSTRUCTIONS)
  private List<Object> analyzedInstructions = new ArrayList<>();

  public static final String SERIALIZED_NAME_CHEAP = "cheap";
  @SerializedName(SERIALIZED_NAME_CHEAP)
  private Boolean cheap;

  public static final String SERIALIZED_NAME_CREDITS_TEXT = "creditsText";
  @SerializedName(SERIALIZED_NAME_CREDITS_TEXT)
  private String creditsText;

  public static final String SERIALIZED_NAME_CUISINES = "cuisines";
  @SerializedName(SERIALIZED_NAME_CUISINES)
  private List<String> cuisines = new ArrayList<>();

  public static final String SERIALIZED_NAME_DAIRY_FREE = "dairyFree";
  @SerializedName(SERIALIZED_NAME_DAIRY_FREE)
  private Boolean dairyFree;

  public static final String SERIALIZED_NAME_DIETS = "diets";
  @SerializedName(SERIALIZED_NAME_DIETS)
  private List<String> diets = new ArrayList<>();

  public static final String SERIALIZED_NAME_GAPS = "gaps";
  @SerializedName(SERIALIZED_NAME_GAPS)
  private String gaps;

  public static final String SERIALIZED_NAME_GLUTEN_FREE = "glutenFree";
  @SerializedName(SERIALIZED_NAME_GLUTEN_FREE)
  private Boolean glutenFree;

  public static final String SERIALIZED_NAME_INSTRUCTIONS = "instructions";
  @SerializedName(SERIALIZED_NAME_INSTRUCTIONS)
  private String instructions;

  public static final String SERIALIZED_NAME_KETOGENIC = "ketogenic";
  @SerializedName(SERIALIZED_NAME_KETOGENIC)
  private Boolean ketogenic;

  public static final String SERIALIZED_NAME_LOW_FODMAP = "lowFodmap";
  @SerializedName(SERIALIZED_NAME_LOW_FODMAP)
  private Boolean lowFodmap;

  public static final String SERIALIZED_NAME_OCCASIONS = "occasions";
  @SerializedName(SERIALIZED_NAME_OCCASIONS)
  private List<String> occasions = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUSTAINABLE = "sustainable";
  @SerializedName(SERIALIZED_NAME_SUSTAINABLE)
  private Boolean sustainable;

  public static final String SERIALIZED_NAME_VEGAN = "vegan";
  @SerializedName(SERIALIZED_NAME_VEGAN)
  private Boolean vegan;

  public static final String SERIALIZED_NAME_VEGETARIAN = "vegetarian";
  @SerializedName(SERIALIZED_NAME_VEGETARIAN)
  private Boolean vegetarian;

  public static final String SERIALIZED_NAME_VERY_HEALTHY = "veryHealthy";
  @SerializedName(SERIALIZED_NAME_VERY_HEALTHY)
  private Boolean veryHealthy;

  public static final String SERIALIZED_NAME_VERY_POPULAR = "veryPopular";
  @SerializedName(SERIALIZED_NAME_VERY_POPULAR)
  private Boolean veryPopular;

  public static final String SERIALIZED_NAME_WHOLE30 = "whole30";
  @SerializedName(SERIALIZED_NAME_WHOLE30)
  private Boolean whole30;

  public static final String SERIALIZED_NAME_WEIGHT_WATCHER_SMART_POINTS = "weightWatcherSmartPoints";
  @SerializedName(SERIALIZED_NAME_WEIGHT_WATCHER_SMART_POINTS)
  private BigDecimal weightWatcherSmartPoints;

  public static final String SERIALIZED_NAME_DISH_TYPES = "dishTypes";
  @SerializedName(SERIALIZED_NAME_DISH_TYPES)
  private List<String> dishTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_EXTENDED_INGREDIENTS = "extendedIngredients";
  @SerializedName(SERIALIZED_NAME_EXTENDED_INGREDIENTS)
  private List<InlineResponse2003ExtendedIngredients> extendedIngredients = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUMMARY = "summary";
  @SerializedName(SERIALIZED_NAME_SUMMARY)
  private String summary;

  public static final String SERIALIZED_NAME_WINE_PAIRING = "winePairing";
  @SerializedName(SERIALIZED_NAME_WINE_PAIRING)
  private InlineResponse2003WinePairing winePairing = null;

  public InlineResponse2003 id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public InlineResponse2003 title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @ApiModelProperty(required = true, value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public InlineResponse2003 image(String image) {
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @ApiModelProperty(required = true, value = "")
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }

  public InlineResponse2003 imageType(String imageType) {
    this.imageType = imageType;
    return this;
  }

   /**
   * Get imageType
   * @return imageType
  **/
  @ApiModelProperty(required = true, value = "")
  public String getImageType() {
    return imageType;
  }

  public void setImageType(String imageType) {
    this.imageType = imageType;
  }

  public InlineResponse2003 servings(BigDecimal servings) {
    this.servings = servings;
    return this;
  }

   /**
   * Get servings
   * @return servings
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getServings() {
    return servings;
  }

  public void setServings(BigDecimal servings) {
    this.servings = servings;
  }

  public InlineResponse2003 readyInMinutes(Integer readyInMinutes) {
    this.readyInMinutes = readyInMinutes;
    return this;
  }

   /**
   * Get readyInMinutes
   * @return readyInMinutes
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getReadyInMinutes() {
    return readyInMinutes;
  }

  public void setReadyInMinutes(Integer readyInMinutes) {
    this.readyInMinutes = readyInMinutes;
  }

  public InlineResponse2003 license(String license) {
    this.license = license;
    return this;
  }

   /**
   * Get license
   * @return license
  **/
  @ApiModelProperty(required = true, value = "")
  public String getLicense() {
    return license;
  }

  public void setLicense(String license) {
    this.license = license;
  }

  public InlineResponse2003 sourceName(String sourceName) {
    this.sourceName = sourceName;
    return this;
  }

   /**
   * Get sourceName
   * @return sourceName
  **/
  @ApiModelProperty(required = true, value = "")
  public String getSourceName() {
    return sourceName;
  }

  public void setSourceName(String sourceName) {
    this.sourceName = sourceName;
  }

  public InlineResponse2003 sourceUrl(String sourceUrl) {
    this.sourceUrl = sourceUrl;
    return this;
  }

   /**
   * Get sourceUrl
   * @return sourceUrl
  **/
  @ApiModelProperty(required = true, value = "")
  public String getSourceUrl() {
    return sourceUrl;
  }

  public void setSourceUrl(String sourceUrl) {
    this.sourceUrl = sourceUrl;
  }

  public InlineResponse2003 spoonacularSourceUrl(String spoonacularSourceUrl) {
    this.spoonacularSourceUrl = spoonacularSourceUrl;
    return this;
  }

   /**
   * Get spoonacularSourceUrl
   * @return spoonacularSourceUrl
  **/
  @ApiModelProperty(required = true, value = "")
  public String getSpoonacularSourceUrl() {
    return spoonacularSourceUrl;
  }

  public void setSpoonacularSourceUrl(String spoonacularSourceUrl) {
    this.spoonacularSourceUrl = spoonacularSourceUrl;
  }

  public InlineResponse2003 aggregateLikes(Integer aggregateLikes) {
    this.aggregateLikes = aggregateLikes;
    return this;
  }

   /**
   * Get aggregateLikes
   * @return aggregateLikes
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getAggregateLikes() {
    return aggregateLikes;
  }

  public void setAggregateLikes(Integer aggregateLikes) {
    this.aggregateLikes = aggregateLikes;
  }

  public InlineResponse2003 healthScore(BigDecimal healthScore) {
    this.healthScore = healthScore;
    return this;
  }

   /**
   * Get healthScore
   * @return healthScore
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getHealthScore() {
    return healthScore;
  }

  public void setHealthScore(BigDecimal healthScore) {
    this.healthScore = healthScore;
  }

  public InlineResponse2003 spoonacularScore(BigDecimal spoonacularScore) {
    this.spoonacularScore = spoonacularScore;
    return this;
  }

   /**
   * Get spoonacularScore
   * @return spoonacularScore
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getSpoonacularScore() {
    return spoonacularScore;
  }

  public void setSpoonacularScore(BigDecimal spoonacularScore) {
    this.spoonacularScore = spoonacularScore;
  }

  public InlineResponse2003 pricePerServing(BigDecimal pricePerServing) {
    this.pricePerServing = pricePerServing;
    return this;
  }

   /**
   * Get pricePerServing
   * @return pricePerServing
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getPricePerServing() {
    return pricePerServing;
  }

  public void setPricePerServing(BigDecimal pricePerServing) {
    this.pricePerServing = pricePerServing;
  }

  public InlineResponse2003 analyzedInstructions(List<Object> analyzedInstructions) {
    this.analyzedInstructions = analyzedInstructions;
    return this;
  }

  public InlineResponse2003 addAnalyzedInstructionsItem(Object analyzedInstructionsItem) {
    this.analyzedInstructions.add(analyzedInstructionsItem);
    return this;
  }

   /**
   * Get analyzedInstructions
   * @return analyzedInstructions
  **/
  @ApiModelProperty(required = true, value = "")
  public List<Object> getAnalyzedInstructions() {
    return analyzedInstructions;
  }

  public void setAnalyzedInstructions(List<Object> analyzedInstructions) {
    this.analyzedInstructions = analyzedInstructions;
  }

  public InlineResponse2003 cheap(Boolean cheap) {
    this.cheap = cheap;
    return this;
  }

   /**
   * Get cheap
   * @return cheap
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getCheap() {
    return cheap;
  }

  public void setCheap(Boolean cheap) {
    this.cheap = cheap;
  }

  public InlineResponse2003 creditsText(String creditsText) {
    this.creditsText = creditsText;
    return this;
  }

   /**
   * Get creditsText
   * @return creditsText
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCreditsText() {
    return creditsText;
  }

  public void setCreditsText(String creditsText) {
    this.creditsText = creditsText;
  }

  public InlineResponse2003 cuisines(List<String> cuisines) {
    this.cuisines = cuisines;
    return this;
  }

  public InlineResponse2003 addCuisinesItem(String cuisinesItem) {
    this.cuisines.add(cuisinesItem);
    return this;
  }

   /**
   * Get cuisines
   * @return cuisines
  **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getCuisines() {
    return cuisines;
  }

  public void setCuisines(List<String> cuisines) {
    this.cuisines = cuisines;
  }

  public InlineResponse2003 dairyFree(Boolean dairyFree) {
    this.dairyFree = dairyFree;
    return this;
  }

   /**
   * Get dairyFree
   * @return dairyFree
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getDairyFree() {
    return dairyFree;
  }

  public void setDairyFree(Boolean dairyFree) {
    this.dairyFree = dairyFree;
  }

  public InlineResponse2003 diets(List<String> diets) {
    this.diets = diets;
    return this;
  }

  public InlineResponse2003 addDietsItem(String dietsItem) {
    this.diets.add(dietsItem);
    return this;
  }

   /**
   * Get diets
   * @return diets
  **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getDiets() {
    return diets;
  }

  public void setDiets(List<String> diets) {
    this.diets = diets;
  }

  public InlineResponse2003 gaps(String gaps) {
    this.gaps = gaps;
    return this;
  }

   /**
   * Get gaps
   * @return gaps
  **/
  @ApiModelProperty(required = true, value = "")
  public String getGaps() {
    return gaps;
  }

  public void setGaps(String gaps) {
    this.gaps = gaps;
  }

  public InlineResponse2003 glutenFree(Boolean glutenFree) {
    this.glutenFree = glutenFree;
    return this;
  }

   /**
   * Get glutenFree
   * @return glutenFree
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getGlutenFree() {
    return glutenFree;
  }

  public void setGlutenFree(Boolean glutenFree) {
    this.glutenFree = glutenFree;
  }

  public InlineResponse2003 instructions(String instructions) {
    this.instructions = instructions;
    return this;
  }

   /**
   * Get instructions
   * @return instructions
  **/
  @ApiModelProperty(required = true, value = "")
  public String getInstructions() {
    return instructions;
  }

  public void setInstructions(String instructions) {
    this.instructions = instructions;
  }

  public InlineResponse2003 ketogenic(Boolean ketogenic) {
    this.ketogenic = ketogenic;
    return this;
  }

   /**
   * Get ketogenic
   * @return ketogenic
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getKetogenic() {
    return ketogenic;
  }

  public void setKetogenic(Boolean ketogenic) {
    this.ketogenic = ketogenic;
  }

  public InlineResponse2003 lowFodmap(Boolean lowFodmap) {
    this.lowFodmap = lowFodmap;
    return this;
  }

   /**
   * Get lowFodmap
   * @return lowFodmap
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getLowFodmap() {
    return lowFodmap;
  }

  public void setLowFodmap(Boolean lowFodmap) {
    this.lowFodmap = lowFodmap;
  }

  public InlineResponse2003 occasions(List<String> occasions) {
    this.occasions = occasions;
    return this;
  }

  public InlineResponse2003 addOccasionsItem(String occasionsItem) {
    this.occasions.add(occasionsItem);
    return this;
  }

   /**
   * Get occasions
   * @return occasions
  **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getOccasions() {
    return occasions;
  }

  public void setOccasions(List<String> occasions) {
    this.occasions = occasions;
  }

  public InlineResponse2003 sustainable(Boolean sustainable) {
    this.sustainable = sustainable;
    return this;
  }

   /**
   * Get sustainable
   * @return sustainable
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getSustainable() {
    return sustainable;
  }

  public void setSustainable(Boolean sustainable) {
    this.sustainable = sustainable;
  }

  public InlineResponse2003 vegan(Boolean vegan) {
    this.vegan = vegan;
    return this;
  }

   /**
   * Get vegan
   * @return vegan
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getVegan() {
    return vegan;
  }

  public void setVegan(Boolean vegan) {
    this.vegan = vegan;
  }

  public InlineResponse2003 vegetarian(Boolean vegetarian) {
    this.vegetarian = vegetarian;
    return this;
  }

   /**
   * Get vegetarian
   * @return vegetarian
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getVegetarian() {
    return vegetarian;
  }

  public void setVegetarian(Boolean vegetarian) {
    this.vegetarian = vegetarian;
  }

  public InlineResponse2003 veryHealthy(Boolean veryHealthy) {
    this.veryHealthy = veryHealthy;
    return this;
  }

   /**
   * Get veryHealthy
   * @return veryHealthy
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getVeryHealthy() {
    return veryHealthy;
  }

  public void setVeryHealthy(Boolean veryHealthy) {
    this.veryHealthy = veryHealthy;
  }

  public InlineResponse2003 veryPopular(Boolean veryPopular) {
    this.veryPopular = veryPopular;
    return this;
  }

   /**
   * Get veryPopular
   * @return veryPopular
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getVeryPopular() {
    return veryPopular;
  }

  public void setVeryPopular(Boolean veryPopular) {
    this.veryPopular = veryPopular;
  }

  public InlineResponse2003 whole30(Boolean whole30) {
    this.whole30 = whole30;
    return this;
  }

   /**
   * Get whole30
   * @return whole30
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getWhole30() {
    return whole30;
  }

  public void setWhole30(Boolean whole30) {
    this.whole30 = whole30;
  }

  public InlineResponse2003 weightWatcherSmartPoints(BigDecimal weightWatcherSmartPoints) {
    this.weightWatcherSmartPoints = weightWatcherSmartPoints;
    return this;
  }

   /**
   * Get weightWatcherSmartPoints
   * @return weightWatcherSmartPoints
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getWeightWatcherSmartPoints() {
    return weightWatcherSmartPoints;
  }

  public void setWeightWatcherSmartPoints(BigDecimal weightWatcherSmartPoints) {
    this.weightWatcherSmartPoints = weightWatcherSmartPoints;
  }

  public InlineResponse2003 dishTypes(List<String> dishTypes) {
    this.dishTypes = dishTypes;
    return this;
  }

  public InlineResponse2003 addDishTypesItem(String dishTypesItem) {
    this.dishTypes.add(dishTypesItem);
    return this;
  }

   /**
   * Get dishTypes
   * @return dishTypes
  **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getDishTypes() {
    return dishTypes;
  }

  public void setDishTypes(List<String> dishTypes) {
    this.dishTypes = dishTypes;
  }

  public InlineResponse2003 extendedIngredients(List<InlineResponse2003ExtendedIngredients> extendedIngredients) {
    this.extendedIngredients = extendedIngredients;
    return this;
  }

  public InlineResponse2003 addExtendedIngredientsItem(InlineResponse2003ExtendedIngredients extendedIngredientsItem) {
    this.extendedIngredients.add(extendedIngredientsItem);
    return this;
  }

   /**
   * Get extendedIngredients
   * @return extendedIngredients
  **/
  @ApiModelProperty(required = true, value = "")
  public List<InlineResponse2003ExtendedIngredients> getExtendedIngredients() {
    return extendedIngredients;
  }

  public void setExtendedIngredients(List<InlineResponse2003ExtendedIngredients> extendedIngredients) {
    this.extendedIngredients = extendedIngredients;
  }

  public InlineResponse2003 summary(String summary) {
    this.summary = summary;
    return this;
  }

   /**
   * Get summary
   * @return summary
  **/
  @ApiModelProperty(required = true, value = "")
  public String getSummary() {
    return summary;
  }

  public void setSummary(String summary) {
    this.summary = summary;
  }

  public InlineResponse2003 winePairing(InlineResponse2003WinePairing winePairing) {
    this.winePairing = winePairing;
    return this;
  }

   /**
   * Get winePairing
   * @return winePairing
  **/
  @ApiModelProperty(required = true, value = "")
  public InlineResponse2003WinePairing getWinePairing() {
    return winePairing;
  }

  public void setWinePairing(InlineResponse2003WinePairing winePairing) {
    this.winePairing = winePairing;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2003 inlineResponse2003 = (InlineResponse2003) o;
    return Objects.equals(this.id, inlineResponse2003.id) &&
        Objects.equals(this.title, inlineResponse2003.title) &&
        Objects.equals(this.image, inlineResponse2003.image) &&
        Objects.equals(this.imageType, inlineResponse2003.imageType) &&
        Objects.equals(this.servings, inlineResponse2003.servings) &&
        Objects.equals(this.readyInMinutes, inlineResponse2003.readyInMinutes) &&
        Objects.equals(this.license, inlineResponse2003.license) &&
        Objects.equals(this.sourceName, inlineResponse2003.sourceName) &&
        Objects.equals(this.sourceUrl, inlineResponse2003.sourceUrl) &&
        Objects.equals(this.spoonacularSourceUrl, inlineResponse2003.spoonacularSourceUrl) &&
        Objects.equals(this.aggregateLikes, inlineResponse2003.aggregateLikes) &&
        Objects.equals(this.healthScore, inlineResponse2003.healthScore) &&
        Objects.equals(this.spoonacularScore, inlineResponse2003.spoonacularScore) &&
        Objects.equals(this.pricePerServing, inlineResponse2003.pricePerServing) &&
        Objects.equals(this.analyzedInstructions, inlineResponse2003.analyzedInstructions) &&
        Objects.equals(this.cheap, inlineResponse2003.cheap) &&
        Objects.equals(this.creditsText, inlineResponse2003.creditsText) &&
        Objects.equals(this.cuisines, inlineResponse2003.cuisines) &&
        Objects.equals(this.dairyFree, inlineResponse2003.dairyFree) &&
        Objects.equals(this.diets, inlineResponse2003.diets) &&
        Objects.equals(this.gaps, inlineResponse2003.gaps) &&
        Objects.equals(this.glutenFree, inlineResponse2003.glutenFree) &&
        Objects.equals(this.instructions, inlineResponse2003.instructions) &&
        Objects.equals(this.ketogenic, inlineResponse2003.ketogenic) &&
        Objects.equals(this.lowFodmap, inlineResponse2003.lowFodmap) &&
        Objects.equals(this.occasions, inlineResponse2003.occasions) &&
        Objects.equals(this.sustainable, inlineResponse2003.sustainable) &&
        Objects.equals(this.vegan, inlineResponse2003.vegan) &&
        Objects.equals(this.vegetarian, inlineResponse2003.vegetarian) &&
        Objects.equals(this.veryHealthy, inlineResponse2003.veryHealthy) &&
        Objects.equals(this.veryPopular, inlineResponse2003.veryPopular) &&
        Objects.equals(this.whole30, inlineResponse2003.whole30) &&
        Objects.equals(this.weightWatcherSmartPoints, inlineResponse2003.weightWatcherSmartPoints) &&
        Objects.equals(this.dishTypes, inlineResponse2003.dishTypes) &&
        Objects.equals(this.extendedIngredients, inlineResponse2003.extendedIngredients) &&
        Objects.equals(this.summary, inlineResponse2003.summary) &&
        Objects.equals(this.winePairing, inlineResponse2003.winePairing);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, title, image, imageType, servings, readyInMinutes, license, sourceName, sourceUrl, spoonacularSourceUrl, aggregateLikes, healthScore, spoonacularScore, pricePerServing, analyzedInstructions, cheap, creditsText, cuisines, dairyFree, diets, gaps, glutenFree, instructions, ketogenic, lowFodmap, occasions, sustainable, vegan, vegetarian, veryHealthy, veryPopular, whole30, weightWatcherSmartPoints, dishTypes, extendedIngredients, summary, winePairing);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2003 {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    imageType: ").append(toIndentedString(imageType)).append("\n");
    sb.append("    servings: ").append(toIndentedString(servings)).append("\n");
    sb.append("    readyInMinutes: ").append(toIndentedString(readyInMinutes)).append("\n");
    sb.append("    license: ").append(toIndentedString(license)).append("\n");
    sb.append("    sourceName: ").append(toIndentedString(sourceName)).append("\n");
    sb.append("    sourceUrl: ").append(toIndentedString(sourceUrl)).append("\n");
    sb.append("    spoonacularSourceUrl: ").append(toIndentedString(spoonacularSourceUrl)).append("\n");
    sb.append("    aggregateLikes: ").append(toIndentedString(aggregateLikes)).append("\n");
    sb.append("    healthScore: ").append(toIndentedString(healthScore)).append("\n");
    sb.append("    spoonacularScore: ").append(toIndentedString(spoonacularScore)).append("\n");
    sb.append("    pricePerServing: ").append(toIndentedString(pricePerServing)).append("\n");
    sb.append("    analyzedInstructions: ").append(toIndentedString(analyzedInstructions)).append("\n");
    sb.append("    cheap: ").append(toIndentedString(cheap)).append("\n");
    sb.append("    creditsText: ").append(toIndentedString(creditsText)).append("\n");
    sb.append("    cuisines: ").append(toIndentedString(cuisines)).append("\n");
    sb.append("    dairyFree: ").append(toIndentedString(dairyFree)).append("\n");
    sb.append("    diets: ").append(toIndentedString(diets)).append("\n");
    sb.append("    gaps: ").append(toIndentedString(gaps)).append("\n");
    sb.append("    glutenFree: ").append(toIndentedString(glutenFree)).append("\n");
    sb.append("    instructions: ").append(toIndentedString(instructions)).append("\n");
    sb.append("    ketogenic: ").append(toIndentedString(ketogenic)).append("\n");
    sb.append("    lowFodmap: ").append(toIndentedString(lowFodmap)).append("\n");
    sb.append("    occasions: ").append(toIndentedString(occasions)).append("\n");
    sb.append("    sustainable: ").append(toIndentedString(sustainable)).append("\n");
    sb.append("    vegan: ").append(toIndentedString(vegan)).append("\n");
    sb.append("    vegetarian: ").append(toIndentedString(vegetarian)).append("\n");
    sb.append("    veryHealthy: ").append(toIndentedString(veryHealthy)).append("\n");
    sb.append("    veryPopular: ").append(toIndentedString(veryPopular)).append("\n");
    sb.append("    whole30: ").append(toIndentedString(whole30)).append("\n");
    sb.append("    weightWatcherSmartPoints: ").append(toIndentedString(weightWatcherSmartPoints)).append("\n");
    sb.append("    dishTypes: ").append(toIndentedString(dishTypes)).append("\n");
    sb.append("    extendedIngredients: ").append(toIndentedString(extendedIngredients)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    winePairing: ").append(toIndentedString(winePairing)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

