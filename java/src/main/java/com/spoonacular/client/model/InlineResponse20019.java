/*
 * spoonacular API
 * The spoonacular Nutrition, Recipe, and Food API allows you to access over 380,000 recipes, thousands of ingredients, 800,000 food products, and 100,000 menu items. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: mail@spoonacular.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.spoonacular.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * InlineResponse20019
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-03T15:10:59.332+02:00[Europe/Berlin]")
public class InlineResponse20019 {
  public static final String SERIALIZED_NAME_SOURCE_AMOUNT = "sourceAmount";
  @SerializedName(SERIALIZED_NAME_SOURCE_AMOUNT)
  private BigDecimal sourceAmount;

  public static final String SERIALIZED_NAME_SOURCE_UNIT = "sourceUnit";
  @SerializedName(SERIALIZED_NAME_SOURCE_UNIT)
  private String sourceUnit;

  public static final String SERIALIZED_NAME_TARGET_AMOUNT = "targetAmount";
  @SerializedName(SERIALIZED_NAME_TARGET_AMOUNT)
  private BigDecimal targetAmount;

  public static final String SERIALIZED_NAME_TARGET_UNIT = "targetUnit";
  @SerializedName(SERIALIZED_NAME_TARGET_UNIT)
  private String targetUnit;

  public static final String SERIALIZED_NAME_ANSWER = "answer";
  @SerializedName(SERIALIZED_NAME_ANSWER)
  private String answer;

  public InlineResponse20019 sourceAmount(BigDecimal sourceAmount) {
    this.sourceAmount = sourceAmount;
    return this;
  }

   /**
   * Get sourceAmount
   * @return sourceAmount
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getSourceAmount() {
    return sourceAmount;
  }

  public void setSourceAmount(BigDecimal sourceAmount) {
    this.sourceAmount = sourceAmount;
  }

  public InlineResponse20019 sourceUnit(String sourceUnit) {
    this.sourceUnit = sourceUnit;
    return this;
  }

   /**
   * Get sourceUnit
   * @return sourceUnit
  **/
  @ApiModelProperty(required = true, value = "")
  public String getSourceUnit() {
    return sourceUnit;
  }

  public void setSourceUnit(String sourceUnit) {
    this.sourceUnit = sourceUnit;
  }

  public InlineResponse20019 targetAmount(BigDecimal targetAmount) {
    this.targetAmount = targetAmount;
    return this;
  }

   /**
   * Get targetAmount
   * @return targetAmount
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getTargetAmount() {
    return targetAmount;
  }

  public void setTargetAmount(BigDecimal targetAmount) {
    this.targetAmount = targetAmount;
  }

  public InlineResponse20019 targetUnit(String targetUnit) {
    this.targetUnit = targetUnit;
    return this;
  }

   /**
   * Get targetUnit
   * @return targetUnit
  **/
  @ApiModelProperty(required = true, value = "")
  public String getTargetUnit() {
    return targetUnit;
  }

  public void setTargetUnit(String targetUnit) {
    this.targetUnit = targetUnit;
  }

  public InlineResponse20019 answer(String answer) {
    this.answer = answer;
    return this;
  }

   /**
   * Get answer
   * @return answer
  **/
  @ApiModelProperty(required = true, value = "")
  public String getAnswer() {
    return answer;
  }

  public void setAnswer(String answer) {
    this.answer = answer;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20019 inlineResponse20019 = (InlineResponse20019) o;
    return Objects.equals(this.sourceAmount, inlineResponse20019.sourceAmount) &&
        Objects.equals(this.sourceUnit, inlineResponse20019.sourceUnit) &&
        Objects.equals(this.targetAmount, inlineResponse20019.targetAmount) &&
        Objects.equals(this.targetUnit, inlineResponse20019.targetUnit) &&
        Objects.equals(this.answer, inlineResponse20019.answer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceAmount, sourceUnit, targetAmount, targetUnit, answer);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20019 {\n");
    sb.append("    sourceAmount: ").append(toIndentedString(sourceAmount)).append("\n");
    sb.append("    sourceUnit: ").append(toIndentedString(sourceUnit)).append("\n");
    sb.append("    targetAmount: ").append(toIndentedString(targetAmount)).append("\n");
    sb.append("    targetUnit: ").append(toIndentedString(targetUnit)).append("\n");
    sb.append("    answer: ").append(toIndentedString(answer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

