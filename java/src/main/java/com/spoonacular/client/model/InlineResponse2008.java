/*
 * spoonacular API
 * The spoonacular Nutrition, Recipe, and Food API allows you to access over 380,000 recipes, thousands of ingredients, 800,000 food products, and 100,000 menu items. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: mail@spoonacular.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.spoonacular.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * InlineResponse2008
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-28T20:40:32.759+02:00[Europe/Berlin]")
public class InlineResponse2008 {
  public static final String SERIALIZED_NAME_SWEETNESS = "sweetness";
  @SerializedName(SERIALIZED_NAME_SWEETNESS)
  private BigDecimal sweetness;

  public static final String SERIALIZED_NAME_SALTINESS = "saltiness";
  @SerializedName(SERIALIZED_NAME_SALTINESS)
  private BigDecimal saltiness;

  public static final String SERIALIZED_NAME_SOURNESS = "sourness";
  @SerializedName(SERIALIZED_NAME_SOURNESS)
  private BigDecimal sourness;

  public static final String SERIALIZED_NAME_BITTERNESS = "bitterness";
  @SerializedName(SERIALIZED_NAME_BITTERNESS)
  private BigDecimal bitterness;

  public static final String SERIALIZED_NAME_SAVORINESS = "savoriness";
  @SerializedName(SERIALIZED_NAME_SAVORINESS)
  private BigDecimal savoriness;

  public static final String SERIALIZED_NAME_FATTINESS = "fattiness";
  @SerializedName(SERIALIZED_NAME_FATTINESS)
  private BigDecimal fattiness;

  public static final String SERIALIZED_NAME_SPICINESS = "spiciness";
  @SerializedName(SERIALIZED_NAME_SPICINESS)
  private BigDecimal spiciness;

  public InlineResponse2008 sweetness(BigDecimal sweetness) {
    this.sweetness = sweetness;
    return this;
  }

   /**
   * Get sweetness
   * @return sweetness
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getSweetness() {
    return sweetness;
  }

  public void setSweetness(BigDecimal sweetness) {
    this.sweetness = sweetness;
  }

  public InlineResponse2008 saltiness(BigDecimal saltiness) {
    this.saltiness = saltiness;
    return this;
  }

   /**
   * Get saltiness
   * @return saltiness
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getSaltiness() {
    return saltiness;
  }

  public void setSaltiness(BigDecimal saltiness) {
    this.saltiness = saltiness;
  }

  public InlineResponse2008 sourness(BigDecimal sourness) {
    this.sourness = sourness;
    return this;
  }

   /**
   * Get sourness
   * @return sourness
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getSourness() {
    return sourness;
  }

  public void setSourness(BigDecimal sourness) {
    this.sourness = sourness;
  }

  public InlineResponse2008 bitterness(BigDecimal bitterness) {
    this.bitterness = bitterness;
    return this;
  }

   /**
   * Get bitterness
   * @return bitterness
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getBitterness() {
    return bitterness;
  }

  public void setBitterness(BigDecimal bitterness) {
    this.bitterness = bitterness;
  }

  public InlineResponse2008 savoriness(BigDecimal savoriness) {
    this.savoriness = savoriness;
    return this;
  }

   /**
   * Get savoriness
   * @return savoriness
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getSavoriness() {
    return savoriness;
  }

  public void setSavoriness(BigDecimal savoriness) {
    this.savoriness = savoriness;
  }

  public InlineResponse2008 fattiness(BigDecimal fattiness) {
    this.fattiness = fattiness;
    return this;
  }

   /**
   * Get fattiness
   * @return fattiness
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getFattiness() {
    return fattiness;
  }

  public void setFattiness(BigDecimal fattiness) {
    this.fattiness = fattiness;
  }

  public InlineResponse2008 spiciness(BigDecimal spiciness) {
    this.spiciness = spiciness;
    return this;
  }

   /**
   * Get spiciness
   * @return spiciness
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getSpiciness() {
    return spiciness;
  }

  public void setSpiciness(BigDecimal spiciness) {
    this.spiciness = spiciness;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2008 inlineResponse2008 = (InlineResponse2008) o;
    return Objects.equals(this.sweetness, inlineResponse2008.sweetness) &&
        Objects.equals(this.saltiness, inlineResponse2008.saltiness) &&
        Objects.equals(this.sourness, inlineResponse2008.sourness) &&
        Objects.equals(this.bitterness, inlineResponse2008.bitterness) &&
        Objects.equals(this.savoriness, inlineResponse2008.savoriness) &&
        Objects.equals(this.fattiness, inlineResponse2008.fattiness) &&
        Objects.equals(this.spiciness, inlineResponse2008.spiciness);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sweetness, saltiness, sourness, bitterness, savoriness, fattiness, spiciness);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2008 {\n");
    sb.append("    sweetness: ").append(toIndentedString(sweetness)).append("\n");
    sb.append("    saltiness: ").append(toIndentedString(saltiness)).append("\n");
    sb.append("    sourness: ").append(toIndentedString(sourness)).append("\n");
    sb.append("    bitterness: ").append(toIndentedString(bitterness)).append("\n");
    sb.append("    savoriness: ").append(toIndentedString(savoriness)).append("\n");
    sb.append("    fattiness: ").append(toIndentedString(fattiness)).append("\n");
    sb.append("    spiciness: ").append(toIndentedString(spiciness)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

