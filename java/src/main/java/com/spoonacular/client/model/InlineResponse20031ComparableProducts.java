/*
 * spoonacular API
 * The spoonacular Nutrition, Recipe, and Food API allows you to access over 380,000 recipes, thousands of ingredients, 800,000 food products, and 100,000 menu items. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: mail@spoonacular.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.spoonacular.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spoonacular.client.model.InlineResponse20031ComparableProductsProtein;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * InlineResponse20031ComparableProducts
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-28T20:40:32.759+02:00[Europe/Berlin]")
public class InlineResponse20031ComparableProducts {
  public static final String SERIALIZED_NAME_CALORIES = "calories";
  @SerializedName(SERIALIZED_NAME_CALORIES)
  private List<Object> calories = new ArrayList<>();

  public static final String SERIALIZED_NAME_LIKES = "likes";
  @SerializedName(SERIALIZED_NAME_LIKES)
  private List<Object> likes = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private List<Object> price = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROTEIN = "protein";
  @SerializedName(SERIALIZED_NAME_PROTEIN)
  private List<InlineResponse20031ComparableProductsProtein> protein = new ArrayList<>();

  public static final String SERIALIZED_NAME_SPOONACULAR_SCORE = "spoonacularScore";
  @SerializedName(SERIALIZED_NAME_SPOONACULAR_SCORE)
  private List<InlineResponse20031ComparableProductsProtein> spoonacularScore = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUGAR = "sugar";
  @SerializedName(SERIALIZED_NAME_SUGAR)
  private List<Object> sugar = new ArrayList<>();

  public InlineResponse20031ComparableProducts calories(List<Object> calories) {
    this.calories = calories;
    return this;
  }

  public InlineResponse20031ComparableProducts addCaloriesItem(Object caloriesItem) {
    this.calories.add(caloriesItem);
    return this;
  }

   /**
   * Get calories
   * @return calories
  **/
  @ApiModelProperty(required = true, value = "")
  public List<Object> getCalories() {
    return calories;
  }

  public void setCalories(List<Object> calories) {
    this.calories = calories;
  }

  public InlineResponse20031ComparableProducts likes(List<Object> likes) {
    this.likes = likes;
    return this;
  }

  public InlineResponse20031ComparableProducts addLikesItem(Object likesItem) {
    this.likes.add(likesItem);
    return this;
  }

   /**
   * Get likes
   * @return likes
  **/
  @ApiModelProperty(required = true, value = "")
  public List<Object> getLikes() {
    return likes;
  }

  public void setLikes(List<Object> likes) {
    this.likes = likes;
  }

  public InlineResponse20031ComparableProducts price(List<Object> price) {
    this.price = price;
    return this;
  }

  public InlineResponse20031ComparableProducts addPriceItem(Object priceItem) {
    this.price.add(priceItem);
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @ApiModelProperty(required = true, value = "")
  public List<Object> getPrice() {
    return price;
  }

  public void setPrice(List<Object> price) {
    this.price = price;
  }

  public InlineResponse20031ComparableProducts protein(List<InlineResponse20031ComparableProductsProtein> protein) {
    this.protein = protein;
    return this;
  }

  public InlineResponse20031ComparableProducts addProteinItem(InlineResponse20031ComparableProductsProtein proteinItem) {
    this.protein.add(proteinItem);
    return this;
  }

   /**
   * Get protein
   * @return protein
  **/
  @ApiModelProperty(required = true, value = "")
  public List<InlineResponse20031ComparableProductsProtein> getProtein() {
    return protein;
  }

  public void setProtein(List<InlineResponse20031ComparableProductsProtein> protein) {
    this.protein = protein;
  }

  public InlineResponse20031ComparableProducts spoonacularScore(List<InlineResponse20031ComparableProductsProtein> spoonacularScore) {
    this.spoonacularScore = spoonacularScore;
    return this;
  }

  public InlineResponse20031ComparableProducts addSpoonacularScoreItem(InlineResponse20031ComparableProductsProtein spoonacularScoreItem) {
    this.spoonacularScore.add(spoonacularScoreItem);
    return this;
  }

   /**
   * Get spoonacularScore
   * @return spoonacularScore
  **/
  @ApiModelProperty(required = true, value = "")
  public List<InlineResponse20031ComparableProductsProtein> getSpoonacularScore() {
    return spoonacularScore;
  }

  public void setSpoonacularScore(List<InlineResponse20031ComparableProductsProtein> spoonacularScore) {
    this.spoonacularScore = spoonacularScore;
  }

  public InlineResponse20031ComparableProducts sugar(List<Object> sugar) {
    this.sugar = sugar;
    return this;
  }

  public InlineResponse20031ComparableProducts addSugarItem(Object sugarItem) {
    this.sugar.add(sugarItem);
    return this;
  }

   /**
   * Get sugar
   * @return sugar
  **/
  @ApiModelProperty(required = true, value = "")
  public List<Object> getSugar() {
    return sugar;
  }

  public void setSugar(List<Object> sugar) {
    this.sugar = sugar;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20031ComparableProducts inlineResponse20031ComparableProducts = (InlineResponse20031ComparableProducts) o;
    return Objects.equals(this.calories, inlineResponse20031ComparableProducts.calories) &&
        Objects.equals(this.likes, inlineResponse20031ComparableProducts.likes) &&
        Objects.equals(this.price, inlineResponse20031ComparableProducts.price) &&
        Objects.equals(this.protein, inlineResponse20031ComparableProducts.protein) &&
        Objects.equals(this.spoonacularScore, inlineResponse20031ComparableProducts.spoonacularScore) &&
        Objects.equals(this.sugar, inlineResponse20031ComparableProducts.sugar);
  }

  @Override
  public int hashCode() {
    return Objects.hash(calories, likes, price, protein, spoonacularScore, sugar);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20031ComparableProducts {\n");
    sb.append("    calories: ").append(toIndentedString(calories)).append("\n");
    sb.append("    likes: ").append(toIndentedString(likes)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    protein: ").append(toIndentedString(protein)).append("\n");
    sb.append("    spoonacularScore: ").append(toIndentedString(spoonacularScore)).append("\n");
    sb.append("    sugar: ").append(toIndentedString(sugar)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

