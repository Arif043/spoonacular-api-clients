/*
 * spoonacular API
 * The spoonacular Nutrition, Recipe, and Food API allows you to access over 380,000 recipes, thousands of ingredients, 800,000 food products, and 100,000 menu items. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: mail@spoonacular.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.spoonacular.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spoonacular.client.model.RecipesFindByIngredientsMissedIngredients;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * InlineResponse2001
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-03T15:10:59.332+02:00[Europe/Berlin]")
public class InlineResponse2001 {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private String image;

  public static final String SERIALIZED_NAME_IMAGE_TYPE = "imageType";
  @SerializedName(SERIALIZED_NAME_IMAGE_TYPE)
  private String imageType;

  public static final String SERIALIZED_NAME_LIKES = "likes";
  @SerializedName(SERIALIZED_NAME_LIKES)
  private Integer likes;

  public static final String SERIALIZED_NAME_MISSED_INGREDIENT_COUNT = "missedIngredientCount";
  @SerializedName(SERIALIZED_NAME_MISSED_INGREDIENT_COUNT)
  private Integer missedIngredientCount;

  public static final String SERIALIZED_NAME_MISSED_INGREDIENTS = "missedIngredients";
  @SerializedName(SERIALIZED_NAME_MISSED_INGREDIENTS)
  private List<RecipesFindByIngredientsMissedIngredients> missedIngredients = new ArrayList<>();

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_UNUSED_INGREDIENTS = "unusedIngredients";
  @SerializedName(SERIALIZED_NAME_UNUSED_INGREDIENTS)
  private List<Object> unusedIngredients = new ArrayList<>();

  public static final String SERIALIZED_NAME_USED_INGREDIENT_COUNT = "usedIngredientCount";
  @SerializedName(SERIALIZED_NAME_USED_INGREDIENT_COUNT)
  private BigDecimal usedIngredientCount;

  public static final String SERIALIZED_NAME_USED_INGREDIENTS = "usedIngredients";
  @SerializedName(SERIALIZED_NAME_USED_INGREDIENTS)
  private List<RecipesFindByIngredientsMissedIngredients> usedIngredients = new ArrayList<>();

  public static final String SERIALIZED_NAME_ = "";
  @SerializedName(SERIALIZED_NAME_)
  private String ;

  public InlineResponse2001 id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public InlineResponse2001 image(String image) {
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @ApiModelProperty(required = true, value = "")
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }

  public InlineResponse2001 imageType(String imageType) {
    this.imageType = imageType;
    return this;
  }

   /**
   * Get imageType
   * @return imageType
  **/
  @ApiModelProperty(required = true, value = "")
  public String getImageType() {
    return imageType;
  }

  public void setImageType(String imageType) {
    this.imageType = imageType;
  }

  public InlineResponse2001 likes(Integer likes) {
    this.likes = likes;
    return this;
  }

   /**
   * Get likes
   * @return likes
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getLikes() {
    return likes;
  }

  public void setLikes(Integer likes) {
    this.likes = likes;
  }

  public InlineResponse2001 missedIngredientCount(Integer missedIngredientCount) {
    this.missedIngredientCount = missedIngredientCount;
    return this;
  }

   /**
   * Get missedIngredientCount
   * @return missedIngredientCount
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getMissedIngredientCount() {
    return missedIngredientCount;
  }

  public void setMissedIngredientCount(Integer missedIngredientCount) {
    this.missedIngredientCount = missedIngredientCount;
  }

  public InlineResponse2001 missedIngredients(List<RecipesFindByIngredientsMissedIngredients> missedIngredients) {
    this.missedIngredients = missedIngredients;
    return this;
  }

  public InlineResponse2001 addMissedIngredientsItem(RecipesFindByIngredientsMissedIngredients missedIngredientsItem) {
    this.missedIngredients.add(missedIngredientsItem);
    return this;
  }

   /**
   * Get missedIngredients
   * @return missedIngredients
  **/
  @ApiModelProperty(required = true, value = "")
  public List<RecipesFindByIngredientsMissedIngredients> getMissedIngredients() {
    return missedIngredients;
  }

  public void setMissedIngredients(List<RecipesFindByIngredientsMissedIngredients> missedIngredients) {
    this.missedIngredients = missedIngredients;
  }

  public InlineResponse2001 title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @ApiModelProperty(required = true, value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public InlineResponse2001 unusedIngredients(List<Object> unusedIngredients) {
    this.unusedIngredients = unusedIngredients;
    return this;
  }

  public InlineResponse2001 addUnusedIngredientsItem(Object unusedIngredientsItem) {
    this.unusedIngredients.add(unusedIngredientsItem);
    return this;
  }

   /**
   * Get unusedIngredients
   * @return unusedIngredients
  **/
  @ApiModelProperty(required = true, value = "")
  public List<Object> getUnusedIngredients() {
    return unusedIngredients;
  }

  public void setUnusedIngredients(List<Object> unusedIngredients) {
    this.unusedIngredients = unusedIngredients;
  }

  public InlineResponse2001 usedIngredientCount(BigDecimal usedIngredientCount) {
    this.usedIngredientCount = usedIngredientCount;
    return this;
  }

   /**
   * Get usedIngredientCount
   * @return usedIngredientCount
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getUsedIngredientCount() {
    return usedIngredientCount;
  }

  public void setUsedIngredientCount(BigDecimal usedIngredientCount) {
    this.usedIngredientCount = usedIngredientCount;
  }

  public InlineResponse2001 usedIngredients(List<RecipesFindByIngredientsMissedIngredients> usedIngredients) {
    this.usedIngredients = usedIngredients;
    return this;
  }

  public InlineResponse2001 addUsedIngredientsItem(RecipesFindByIngredientsMissedIngredients usedIngredientsItem) {
    this.usedIngredients.add(usedIngredientsItem);
    return this;
  }

   /**
   * Get usedIngredients
   * @return usedIngredients
  **/
  @ApiModelProperty(required = true, value = "")
  public List<RecipesFindByIngredientsMissedIngredients> getUsedIngredients() {
    return usedIngredients;
  }

  public void setUsedIngredients(List<RecipesFindByIngredientsMissedIngredients> usedIngredients) {
    this.usedIngredients = usedIngredients;
  }

  public InlineResponse2001 (String ) {
    this. = ;
    return this;
  }

   /**
   * Get 
   * @return 
  **/
  @ApiModelProperty(value = "")
  public String get() {
    return ;
  }

  public void set(String ) {
    this. = ;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2001 inlineResponse2001 = (InlineResponse2001) o;
    return Objects.equals(this.id, inlineResponse2001.id) &&
        Objects.equals(this.image, inlineResponse2001.image) &&
        Objects.equals(this.imageType, inlineResponse2001.imageType) &&
        Objects.equals(this.likes, inlineResponse2001.likes) &&
        Objects.equals(this.missedIngredientCount, inlineResponse2001.missedIngredientCount) &&
        Objects.equals(this.missedIngredients, inlineResponse2001.missedIngredients) &&
        Objects.equals(this.title, inlineResponse2001.title) &&
        Objects.equals(this.unusedIngredients, inlineResponse2001.unusedIngredients) &&
        Objects.equals(this.usedIngredientCount, inlineResponse2001.usedIngredientCount) &&
        Objects.equals(this.usedIngredients, inlineResponse2001.usedIngredients) &&
        Objects.equals(this., inlineResponse2001.);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, image, imageType, likes, missedIngredientCount, missedIngredients, title, unusedIngredients, usedIngredientCount, usedIngredients, );
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2001 {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    imageType: ").append(toIndentedString(imageType)).append("\n");
    sb.append("    likes: ").append(toIndentedString(likes)).append("\n");
    sb.append("    missedIngredientCount: ").append(toIndentedString(missedIngredientCount)).append("\n");
    sb.append("    missedIngredients: ").append(toIndentedString(missedIngredients)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    unusedIngredients: ").append(toIndentedString(unusedIngredients)).append("\n");
    sb.append("    usedIngredientCount: ").append(toIndentedString(usedIngredientCount)).append("\n");
    sb.append("    usedIngredients: ").append(toIndentedString(usedIngredients)).append("\n");
    sb.append("    : ").append(toIndentedString()).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

