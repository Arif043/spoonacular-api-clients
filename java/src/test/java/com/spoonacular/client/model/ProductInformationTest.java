/*
 * spoonacular API
 * The spoonacular Nutrition, Recipe, and Food API allows you to access over thousands of recipes, thousands of ingredients, 800,000 food products, over 100,000 menu items, and restaurants. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: mail@spoonacular.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.spoonacular.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spoonacular.client.model.IngredientBasics;
import com.spoonacular.client.model.ProductInformationCredits;
import com.spoonacular.client.model.SearchGroceryProductsByUPC200ResponseNutrition;
import com.spoonacular.client.model.SearchGroceryProductsByUPC200ResponseServings;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ProductInformation
 */
public class ProductInformationTest {
    private final ProductInformation model = new ProductInformation();

    /**
     * Model tests for ProductInformation
     */
    @Test
    public void testProductInformation() {
        // TODO: test ProductInformation
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'upc'
     */
    @Test
    public void upcTest() {
        // TODO: test upc
    }

    /**
     * Test the property 'usdaCode'
     */
    @Test
    public void usdaCodeTest() {
        // TODO: test usdaCode
    }

    /**
     * Test the property 'breadcrumbs'
     */
    @Test
    public void breadcrumbsTest() {
        // TODO: test breadcrumbs
    }

    /**
     * Test the property 'imageType'
     */
    @Test
    public void imageTypeTest() {
        // TODO: test imageType
    }

    /**
     * Test the property 'badges'
     */
    @Test
    public void badgesTest() {
        // TODO: test badges
    }

    /**
     * Test the property 'importantBadges'
     */
    @Test
    public void importantBadgesTest() {
        // TODO: test importantBadges
    }

    /**
     * Test the property 'ingredientCount'
     */
    @Test
    public void ingredientCountTest() {
        // TODO: test ingredientCount
    }

    /**
     * Test the property 'generatedText'
     */
    @Test
    public void generatedTextTest() {
        // TODO: test generatedText
    }

    /**
     * Test the property 'ingredientList'
     */
    @Test
    public void ingredientListTest() {
        // TODO: test ingredientList
    }

    /**
     * Test the property 'ingredients'
     */
    @Test
    public void ingredientsTest() {
        // TODO: test ingredients
    }

    /**
     * Test the property 'likes'
     */
    @Test
    public void likesTest() {
        // TODO: test likes
    }

    /**
     * Test the property 'aisle'
     */
    @Test
    public void aisleTest() {
        // TODO: test aisle
    }

    /**
     * Test the property 'credits'
     */
    @Test
    public void creditsTest() {
        // TODO: test credits
    }

    /**
     * Test the property 'nutrition'
     */
    @Test
    public void nutritionTest() {
        // TODO: test nutrition
    }

    /**
     * Test the property 'price'
     */
    @Test
    public void priceTest() {
        // TODO: test price
    }

    /**
     * Test the property 'servings'
     */
    @Test
    public void servingsTest() {
        // TODO: test servings
    }

    /**
     * Test the property 'spoonacularScore'
     */
    @Test
    public void spoonacularScoreTest() {
        // TODO: test spoonacularScore
    }

}
