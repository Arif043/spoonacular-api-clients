=begin comment

spoonacular API

The spoonacular Nutrition, Recipe, and Food API allows you to access over 380,000 recipes, thousands of ingredients, 800,000 food products, and 100,000 menu items. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.

The version of the OpenAPI document: 1.0
Contact: mail@spoonacular.com
Generated by: https://openapi-generator.tech

=end comment

=cut

#
# NOTE: This class is auto generated by OpenAPI Generator
# Please update the test cases below to test the API endpoints.
# Ref: https://openapi-generator.tech
#
use Test::More tests => 1; #TODO update number of test cases
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('WWW::OpenAPIClient::ProductsApi');

my $api = WWW::OpenAPIClient::ProductsApi->new();
isa_ok($api, 'WWW::OpenAPIClient::ProductsApi');

#
# autocomplete_product_search test
#
{
    my $query = undef; # replace NULL with a proper value
    my $number = undef; # replace NULL with a proper value
    my $result = $api->autocomplete_product_search(query => $query, number => $number);
}

#
# classify_grocery_product test
#
{
    my $inline_object1 = undef; # replace NULL with a proper value
    my $locale = undef; # replace NULL with a proper value
    my $result = $api->classify_grocery_product(inline_object1 => $inline_object1, locale => $locale);
}

#
# classify_grocery_product_bulk test
#
{
    my $inline_object = undef; # replace NULL with a proper value
    my $locale = undef; # replace NULL with a proper value
    my $result = $api->classify_grocery_product_bulk(inline_object => $inline_object, locale => $locale);
}

#
# get_comparable_products test
#
{
    my $upc = undef; # replace NULL with a proper value
    my $result = $api->get_comparable_products(upc => $upc);
}

#
# get_product_information test
#
{
    my $id = undef; # replace NULL with a proper value
    my $result = $api->get_product_information(id => $id);
}

#
# product_nutrition_by_id_image test
#
{
    my $id = undef; # replace NULL with a proper value
    my $result = $api->product_nutrition_by_id_image(id => $id);
}

#
# product_nutrition_label_image test
#
{
    my $id = undef; # replace NULL with a proper value
    my $show_optional_nutrients = undef; # replace NULL with a proper value
    my $show_zero_values = undef; # replace NULL with a proper value
    my $show_ingredients = undef; # replace NULL with a proper value
    my $result = $api->product_nutrition_label_image(id => $id, show_optional_nutrients => $show_optional_nutrients, show_zero_values => $show_zero_values, show_ingredients => $show_ingredients);
}

#
# product_nutrition_label_widget test
#
{
    my $id = undef; # replace NULL with a proper value
    my $default_css = undef; # replace NULL with a proper value
    my $show_optional_nutrients = undef; # replace NULL with a proper value
    my $show_zero_values = undef; # replace NULL with a proper value
    my $show_ingredients = undef; # replace NULL with a proper value
    my $result = $api->product_nutrition_label_widget(id => $id, default_css => $default_css, show_optional_nutrients => $show_optional_nutrients, show_zero_values => $show_zero_values, show_ingredients => $show_ingredients);
}

#
# search_grocery_products test
#
{
    my $query = undef; # replace NULL with a proper value
    my $min_calories = undef; # replace NULL with a proper value
    my $max_calories = undef; # replace NULL with a proper value
    my $min_carbs = undef; # replace NULL with a proper value
    my $max_carbs = undef; # replace NULL with a proper value
    my $min_protein = undef; # replace NULL with a proper value
    my $max_protein = undef; # replace NULL with a proper value
    my $min_fat = undef; # replace NULL with a proper value
    my $max_fat = undef; # replace NULL with a proper value
    my $offset = undef; # replace NULL with a proper value
    my $number = undef; # replace NULL with a proper value
    my $result = $api->search_grocery_products(query => $query, min_calories => $min_calories, max_calories => $max_calories, min_carbs => $min_carbs, max_carbs => $max_carbs, min_protein => $min_protein, max_protein => $max_protein, min_fat => $min_fat, max_fat => $max_fat, offset => $offset, number => $number);
}

#
# search_grocery_products_by_upc test
#
{
    my $upc = undef; # replace NULL with a proper value
    my $result = $api->search_grocery_products_by_upc(upc => $upc);
}

#
# visualize_product_nutrition_by_id test
#
{
    my $id = undef; # replace NULL with a proper value
    my $default_css = undef; # replace NULL with a proper value
    my $accept = undef; # replace NULL with a proper value
    my $result = $api->visualize_product_nutrition_by_id(id => $id, default_css => $default_css, accept => $accept);
}


1;
