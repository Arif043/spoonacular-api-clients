# NOTE: This file is auto generated by OpenAPI Generator 7.8.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule SpoonacularAPI.Model.IngredientInformation do
  @moduledoc """
  
  """

  @derive Jason.Encoder
  defstruct [
    :id,
    :original,
    :originalName,
    :name,
    :amount,
    :unit,
    :unitShort,
    :unitLong,
    :possibleUnits,
    :estimatedCost,
    :consistency,
    :shoppingListUnits,
    :aisle,
    :image,
    :meta,
    :nutrition,
    :categoryPath
  ]

  @type t :: %__MODULE__{
    :id => integer(),
    :original => String.t,
    :originalName => String.t,
    :name => String.t,
    :amount => float(),
    :unit => String.t,
    :unitShort => String.t,
    :unitLong => String.t,
    :possibleUnits => [String.t],
    :estimatedCost => SpoonacularAPI.Model.IngredientInformationEstimatedCost.t,
    :consistency => String.t,
    :shoppingListUnits => [String.t] | nil,
    :aisle => String.t,
    :image => String.t,
    :meta => [String.t],
    :nutrition => SpoonacularAPI.Model.IngredientInformationNutrition.t | nil,
    :categoryPath => [String.t] | nil
  }

  alias SpoonacularAPI.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:estimatedCost, :struct, SpoonacularAPI.Model.IngredientInformationEstimatedCost)
     |> Deserializer.deserialize(:nutrition, :struct, SpoonacularAPI.Model.IngredientInformationNutrition)
  end
end

