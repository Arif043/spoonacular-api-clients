/**
 * spoonacular API
 * The spoonacular Nutrition, Recipe, and Food API allows you to access over 380,000 recipes, thousands of ingredients, 800,000 food products, and 100,000 menu items. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: mail@spoonacular.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInline_response_200_53_videos.h
 *
 * 
 */

#ifndef OAIInline_response_200_53_videos_H
#define OAIInline_response_200_53_videos_H

#include <QJsonObject>


#include "com.spoonacular.client.model\OAINumber.h"
#include <QString>

#include "OAIObject.h"
#include "OAIEnum.h"

namespace OpenAPI {

class OAIInline_response_200_53_videos: public OAIObject {
public:
    OAIInline_response_200_53_videos();
    OAIInline_response_200_53_videos(QString json);
    ~OAIInline_response_200_53_videos() override;

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    
    QString getTitle() const;
    void setTitle(const QString &title);

    
    qint32 getLength() const;
    void setLength(const qint32 &length);

    
    OAINumber getRating() const;
    void setRating(const OAINumber &rating);

    
    QString getShortTitle() const;
    void setShortTitle(const QString &short_title);

    
    QString getThumbnail() const;
    void setThumbnail(const QString &thumbnail);

    
    qint32 getViews() const;
    void setViews(const qint32 &views);

    
    QString getYouTubeId() const;
    void setYouTubeId(const QString &you_tube_id);

    
    
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void init();
    
    QString title;
    bool m_title_isSet;
    bool m_title_isValid;
    
    qint32 length;
    bool m_length_isSet;
    bool m_length_isValid;
    
    OAINumber rating;
    bool m_rating_isSet;
    bool m_rating_isValid;
    
    QString short_title;
    bool m_short_title_isSet;
    bool m_short_title_isValid;
    
    QString thumbnail;
    bool m_thumbnail_isSet;
    bool m_thumbnail_isValid;
    
    qint32 views;
    bool m_views_isSet;
    bool m_views_isValid;
    
    QString you_tube_id;
    bool m_you_tube_id_isSet;
    bool m_you_tube_id_isValid;
    
    };

}

#endif // OAIInline_response_200_53_videos_H
