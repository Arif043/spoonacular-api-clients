/**
 * spoonacular API
 * The spoonacular Nutrition, Recipe, and Food API allows you to access over 380,000 recipes, thousands of ingredients, 800,000 food products, and 100,000 menu items. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: mail@spoonacular.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInline_object_1.h
 *
 * 
 */

#ifndef OAIInline_object_1_H
#define OAIInline_object_1_H

#include <QJsonObject>


#include <QString>

#include "OAIObject.h"
#include "OAIEnum.h"

namespace OpenAPI {

class OAIInline_object_1: public OAIObject {
public:
    OAIInline_object_1();
    OAIInline_object_1(QString json);
    ~OAIInline_object_1() override;

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    
    QString getTitle() const;
    void setTitle(const QString &title);

    
    QString getUpc() const;
    void setUpc(const QString &upc);

    
    QString getPluCode() const;
    void setPluCode(const QString &plu_code);

    
    
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void init();
    
    QString title;
    bool m_title_isSet;
    bool m_title_isValid;
    
    QString upc;
    bool m_upc_isSet;
    bool m_upc_isValid;
    
    QString plu_code;
    bool m_plu_code_isSet;
    bool m_plu_code_isValid;
    
    };

}

#endif // OAIInline_object_1_H
