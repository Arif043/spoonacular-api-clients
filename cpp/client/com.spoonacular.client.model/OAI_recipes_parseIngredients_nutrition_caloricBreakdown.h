/**
 * spoonacular API
 * The spoonacular Nutrition, Recipe, and Food API allows you to access over 380,000 recipes, thousands of ingredients, 800,000 food products, and 100,000 menu items. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: mail@spoonacular.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI_recipes_parseIngredients_nutrition_caloricBreakdown.h
 *
 * 
 */

#ifndef OAI_recipes_parseIngredients_nutrition_caloricBreakdown_H
#define OAI_recipes_parseIngredients_nutrition_caloricBreakdown_H

#include <QJsonObject>


#include "com.spoonacular.client.model\OAINumber.h"

#include "OAIObject.h"
#include "OAIEnum.h"

namespace OpenAPI {

class OAI_recipes_parseIngredients_nutrition_caloricBreakdown: public OAIObject {
public:
    OAI_recipes_parseIngredients_nutrition_caloricBreakdown();
    OAI_recipes_parseIngredients_nutrition_caloricBreakdown(QString json);
    ~OAI_recipes_parseIngredients_nutrition_caloricBreakdown() override;

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    
    OAINumber getPercentProtein() const;
    void setPercentProtein(const OAINumber &percent_protein);

    
    OAINumber getPercentFat() const;
    void setPercentFat(const OAINumber &percent_fat);

    
    OAINumber getPercentCarbs() const;
    void setPercentCarbs(const OAINumber &percent_carbs);

    
    
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void init();
    
    OAINumber percent_protein;
    bool m_percent_protein_isSet;
    bool m_percent_protein_isValid;
    
    OAINumber percent_fat;
    bool m_percent_fat_isSet;
    bool m_percent_fat_isValid;
    
    OAINumber percent_carbs;
    bool m_percent_carbs_isSet;
    bool m_percent_carbs_isValid;
    
    };

}

#endif // OAI_recipes_parseIngredients_nutrition_caloricBreakdown_H
