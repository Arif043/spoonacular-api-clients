/**
 * spoonacular API
 * The spoonacular Nutrition, Recipe, and Food API allows you to access over thousands of recipes, thousands of ingredients, 800,000 food products, over 100,000 menu items, and restaurants. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: mail@spoonacular.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchSiteContent_200_response.h
 *
 * 
 */

#ifndef OAISearchSiteContent_200_response_H
#define OAISearchSiteContent_200_response_H

#include <QJsonObject>

#include "OAISearchResult.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISearchResult;

class OAISearchSiteContent_200_response : public OAIObject {
public:
    OAISearchSiteContent_200_response();
    OAISearchSiteContent_200_response(QString json);
    ~OAISearchSiteContent_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAISearchResult> getArticles() const;
    void setArticles(const QList<OAISearchResult> &articles);
    bool is_articles_Set() const;
    bool is_articles_Valid() const;

    QList<OAISearchResult> getGroceryProducts() const;
    void setGroceryProducts(const QList<OAISearchResult> &grocery_products);
    bool is_grocery_products_Set() const;
    bool is_grocery_products_Valid() const;

    QList<OAISearchResult> getMenuItems() const;
    void setMenuItems(const QList<OAISearchResult> &menu_items);
    bool is_menu_items_Set() const;
    bool is_menu_items_Valid() const;

    QList<OAISearchResult> getRecipes() const;
    void setRecipes(const QList<OAISearchResult> &recipes);
    bool is_recipes_Set() const;
    bool is_recipes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAISearchResult> m_articles;
    bool m_articles_isSet;
    bool m_articles_isValid;

    QList<OAISearchResult> m_grocery_products;
    bool m_grocery_products_isSet;
    bool m_grocery_products_isValid;

    QList<OAISearchResult> m_menu_items;
    bool m_menu_items_isSet;
    bool m_menu_items_isValid;

    QList<OAISearchResult> m_recipes;
    bool m_recipes_isSet;
    bool m_recipes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchSiteContent_200_response)

#endif // OAISearchSiteContent_200_response_H
